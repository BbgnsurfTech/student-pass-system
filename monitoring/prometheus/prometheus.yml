# Prometheus Configuration for Student Pass System
global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'student-pass-system'
    environment: '${ENVIRONMENT:-production}'

rule_files:
  - "alerts/*.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - monitoring
    relabel_configs:
      - source_labels: [__meta_kubernetes_endpoints_name]
        regex: node-exporter
        action: keep

  # Kubernetes API Server
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  # Kubernetes Nodes
  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics

  # Kubernetes Pods
  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Student Pass Backend
  - job_name: 'student-pass-backend'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - student-pass-system
            - production
            - staging
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        regex: backend-service
        action: keep
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        regex: metrics
        action: keep

  # Student Pass Frontend (nginx metrics)
  - job_name: 'student-pass-frontend'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - student-pass-system
            - production
            - staging
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        regex: frontend-service
        action: keep
      - source_labels: [__meta_kubernetes_endpoint_port_name]
        regex: metrics
        action: keep

  # PostgreSQL Exporter
  - job_name: 'postgres-exporter'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - student-pass-system
            - production
            - staging
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        regex: postgres-exporter
        action: keep

  # Redis Exporter
  - job_name: 'redis-exporter'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - student-pass-system
            - production
            - staging
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        regex: redis-exporter
        action: keep

  # AWS Load Balancer Controller
  - job_name: 'aws-load-balancer-controller'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - kube-system
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        regex: aws-load-balancer-controller-metrics
        action: keep

  # Kubernetes State Metrics
  - job_name: 'kube-state-metrics'
    kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
            - monitoring
    relabel_configs:
      - source_labels: [__meta_kubernetes_service_name]
        regex: kube-state-metrics
        action: keep

  # cAdvisor for container metrics
  - job_name: 'cadvisor'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)
      - target_label: __address__
        replacement: kubernetes.default.svc:443
      - source_labels: [__meta_kubernetes_node_name]
        regex: (.+)
        target_label: __metrics_path__
        replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

  # Blackbox Exporter for uptime monitoring
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://studentpass.com
        - https://api.studentpass.com/health
        - https://staging.studentpass.com
        - https://api.staging.studentpass.com/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

# Recording rules for aggregated metrics
recording_rules:
  - name: student_pass_recording_rules
    rules:
      # Application metrics
      - record: student_pass:request_rate
        expr: sum(rate(http_requests_total[5m])) by (service, method, status)

      - record: student_pass:error_rate
        expr: sum(rate(http_requests_total{status=~"5.."}[5m])) by (service) / sum(rate(http_requests_total[5m])) by (service)

      - record: student_pass:response_time_p99
        expr: histogram_quantile(0.99, sum(rate(http_request_duration_seconds_bucket[5m])) by (service, le))

      # Database metrics
      - record: student_pass:db_connection_utilization
        expr: pg_stat_database_numbackends / pg_settings_max_connections * 100

      - record: student_pass:db_slow_queries
        expr: rate(pg_stat_database_tup_fetched[5m]) / rate(pg_stat_database_tup_returned[5m])

      # Cache metrics
      - record: student_pass:redis_hit_rate
        expr: rate(redis_keyspace_hits_total[5m]) / (rate(redis_keyspace_hits_total[5m]) + rate(redis_keyspace_misses_total[5m])) * 100

      # Infrastructure metrics
      - record: student_pass:pod_cpu_usage
        expr: sum(rate(container_cpu_usage_seconds_total{namespace=~"student-pass-system|production|staging"}[5m])) by (pod, namespace)

      - record: student_pass:pod_memory_usage
        expr: sum(container_memory_working_set_bytes{namespace=~"student-pass-system|production|staging"}) by (pod, namespace)

      - record: student_pass:node_cpu_usage
        expr: 100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)

      - record: student_pass:node_memory_usage
        expr: (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100